image: registry.tapenvy.us:443/open-source/megamekwebsite:latest

cache:
  paths:
    - vendor/bundle
    - node_modules

services:
  - postgres:latest
  - redis:latest

variables:
  BUNDLE_PATH: vendor/bundle
  DISABLE_SPRING: "1"
  DB_HOST: postgres
  POSTGRES_DB: "my_custom_db"
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "postgres"

before_script:
  - echo $DEPLOY_MASTER_KEY > config/master.key
  - cp config/database.yml.gitlab config/database.yml
  - bundle exec rails db:create db:schema:load

stages:
  - build
  - test
  - quality
  - deploy

build:
  stage: build
  before_script:
    - bundle check || bundle install --jobs $(nproc) && bundle clean --force
    - yarn install
  script:
    - ruby -v
    - node -v
    - yarn -v

tests:
  stage: test
  script:
    - bundle exec rspec
  artifacts:
    paths:
      - coverage/

sast:
  stage: quality
  except:
    - master
  allow_failure: true
  script:
    - bundle exec brakeman -A -m

fasterer:
  stage: quality
  except:
    - master
  allow_failure: true
  script:
    - bundle exec fasterer

rails_best_practicies:
  stage: quality
  except:
    - master
  allow_failure: true
  script:
    - bundle exec rails_best_practices

reek:
  stage: quality
  except:
    - master
  allow_failure: true
  script:
    - bundle exec reek

rubocop:
  stage: quality
  except:
    - master
  allow_failure: true
  script:
    - bundle exec rubocop

audit:
  stage: test
  except:
    - master
  script:
    - bundle exec bundle-audit update
    - bundle exec bundle-audit check

deploy:
  stage: deploy
  only:
    - master
  before_script:
    - echo $DEPLOY_MASTER_KEY > ansible/templates/master.key
  script:
    - ansible-playbook ansible/app.yml
  tags:
    - deploy

pages:
  stage: deploy
  dependencies:
    - tests
  before_script:
    - echo 'No need to do anything'
  script:
    - rm -rf public
    - mv coverage public
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master
