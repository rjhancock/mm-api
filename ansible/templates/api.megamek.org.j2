upstream {{ app_name }} {
  server unix:{{ shared_dir }}/sockets/puma.sock fail_timeout=0;
}

server {
  listen 80;
  listen [::]:80;
  server_name {{ server_name }};
  server_tokens off;

  include /etc/nginx/snippets/letsencrypt.conf;

  return 301 https://{{ server_name }}$request_uri;
  access_log /var/log/nginx/{{ server_name }}-access.log;
  error_log /var/log/nginx/{{ server_name }}-error.log;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name {{ server_name }};
  server_tokens off;
  root {{ env_base_dir }}/current/public;

  ssl on;
  ssl_certificate /etc/letsencrypt/live/{{ server_name }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ server_name }}/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/{{ server_name }}/fullchain.pem;

  include /etc/nginx/snippets/letsencrypt.conf;
  include /etc/nginx/snippets/ssl.conf;

  access_log /var/log/nginx/ssl-{{ server_name }}-access.log;
  error_log /var/log/nginx/ssl-{{ server_name }}-error.log;

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  location / {
    client_max_body_size 0;
    gzip on;

    proxy_read_timeout      300;
    proxy_connect_timeout   300;
    proxy_redirect          off;

    proxy_http_version 1.1;

    proxy_set_header    Host                $http_host;
    proxy_set_header    X-Real-IP           $remote_addr;
    proxy_set_header    X-Forwarded-Ssl     on;
    proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Proto   $scheme;
    proxy_pass http://{{ app_name }};
  }
}
